{"version":3,"file":"static/js/388.d97bd8e4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/CastPage/cast-page.module.css?6198","components/CastPage/CastPage.jsx","pages/Api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"cast-page_img__EuZZ3\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'pages/Api';\nimport styles from './cast-page.module.css';\nimport placeholder from '../image/placeholder.png';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const respons = await fetchMovieCast(movieId);\n        setCast(respons);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const elements = cast.map(\n    ({ id, character, original_name, profile_path }) => (\n      <li key={id}>\n        <h4>{original_name}</h4>\n        <img\n          className={styles.img}\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w300${profile_path}`\n              : `${placeholder}`\n          }\n          alt={original_name}\n        />\n      </li>\n    )\n  );\n\n  const isCast = Boolean(cast.length);\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      {error && <p>{error}</p>}\n      {(isCast && <ul>{elements}</ul>) || (\n        <p className={styles.info}>There are no reviews.</p>\n      )}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst API_KEY = '344c7270581ee8890ac0e8ee75ba983e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n};\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const searchMovies = (query, page = 1) => {\n  return instance.get(`/search/movie?query=${query}&page=${page}`, params);\n};\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day`, params);\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, params);\n  return response.data.results;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","respons","_context","prev","next","fetchMovieCast","sent","t0","message","finish","stop","apply","arguments","elements","map","_ref2","id","original_name","character","profile_path","_jsxs","children","_jsx","className","styles","src","concat","placeholder","alt","isCast","Boolean","length","_Fragment","axios","params","api_key","language","include_adult","instance","baseURL","searchMovies","query","page","undefined","get","fetchMovies","_yield$axios$get","data","abrupt","getMovieById","_callee2","response","_context2","_x","_ref3","_callee3","_context3","_x2","fetchMovieReviews","_ref4","_callee4","_context4","results","_x3"],"sourceRoot":""}